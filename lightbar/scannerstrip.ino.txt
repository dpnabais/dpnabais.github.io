#include <LedRGB.h>

LedRGB myLED(9, 10, 11, CA);

byte RedLight;
byte GreenLight;
byte BlueLight;

int potPin = A0;
int potVal = 0;

void setup() {
 
  Serial.begin(9600);
  pinMode(potPin, INPUT);
  myLED.setColor(255, 255, 255);    //  Set color to white
  delay(1000);                       //  Wait 200ms before starting loop
}

void loop() {
  
  potVal = map(analogRead(potPin), 0, 1024, 0, 255);
  setLedColorHSV(potVal,255,255);
  if (potVal > 253){
    myLED.setColor(255,0,0);
      delay(50);
      myLED.setColor(0,0,0);
      delay(50);
      myLED.setColor(255,0,0);
      delay(50);
      myLED.setColor(0,0,0);
      delay(50);
      myLED.setColor(255,0,0);
      delay(50);
      myLED.setColor(255,255,255);
      delay(50);
      myLED.setColor(0,0,0);
      delay(50);
    
      myLED.setColor(0,0,255);
      delay(50);
      myLED.setColor(0,0,0);
      delay(50);
      myLED.setColor(0,0,255);
      delay(50);
      myLED.setColor(0,0,0);
      delay(50);
      myLED.setColor(0,0,255);
      delay(50);
      myLED.setColor(255,255,255);
      delay(50);
      myLED.setColor(0,0,0);
      delay(50);
   
  } else if(potVal < 2) {
      myLED.setColor(255, 255, 255);
    } else {
       myLED.setColor(RedLight, GreenLight, BlueLight);
    }
    
}


void setLedColorHSV(byte h, byte s, byte v) {
  // this is the algorithm to convert from RGB to HSV
  h = (h * 192) / 256;  // 0..191
  unsigned int i = h / 32;   // We want a value of 0 thru 5
  unsigned int f = (h % 32) * 8;   // 'fractional' part of 'i' 0..248 in jumps

  unsigned int sInv = 255 - s;  // 0 -> 0xff, 0xff -> 0
  unsigned int fInv = 255 - f;  // 0 -> 0xff, 0xff -> 0
  byte pv = v * sInv / 256;  // pv will be in range 0 - 255
  byte qv = v * (256 - s * f / 256) / 256;
  byte tv = v * (256 - s * fInv / 256) / 256;

  switch (i) {
  case 0:
    RedLight = v;
    GreenLight = tv;
    BlueLight = pv;
    break;
  case 1:
    RedLight = qv;
    GreenLight = v;
    BlueLight = pv;
    break;
  case 2:
    RedLight = pv;
    GreenLight = v;
    BlueLight = tv;
    break;
  case 3:
    RedLight = pv;
    GreenLight = qv;
    BlueLight = v;
    break;
  case 4:
    RedLight = tv;
    GreenLight = pv;
    BlueLight = v;
    break;
  case 5:
    RedLight = v;
    GreenLight = pv;
    BlueLight = qv;
    break;
  }
}
